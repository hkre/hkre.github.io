<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>并发与并行</title>
    <link href="/2022/10/27/202210/%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%B9%B6%E8%A1%8C/"/>
    <url>/2022/10/27/202210/%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%B9%B6%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<blockquote><h1 id="并发与并行"><a href="#并发与并行" class="headerlink" title="并发与并行"></a>并发与并行</h1></blockquote><h1 id="1-并发"><a href="#1-并发" class="headerlink" title="1:并发"></a>1:并发</h1><h2 id="1-1上下文切换"><a href="#1-1上下文切换" class="headerlink" title="1.1上下文切换"></a>1.1上下文切换</h2><p><em>cpu通过时间片来切换线程循环执行任务，jvm中的PC寄存器会记录上个线程执行的行数，以便下次从执行到的行数继续往下执行。</em></p><h4 id="1-1-1-减少上下文切换的开销"><a href="#1-1-1-减少上下文切换的开销" class="headerlink" title="1.1.1 减少上下文切换的开销"></a>1.1.1 减少上下文切换的开销</h4><ul><li><input disabled type="checkbox"> <em>无锁并发编程，数据的id安装Hash算法取模分段，不同线程处理不同段的数据</em></li><li><input disabled type="checkbox"> <em>CAS</em></li><li><input disabled type="checkbox"> <em>使用最少线程，干最多的事情，创建线程合理，避免大量线程处于等待状态</em></li><li><input disabled type="checkbox"> <em>协程</em></li></ul><h2 id="1-2：死锁"><a href="#1-2：死锁" class="headerlink" title="1.2：死锁"></a>1.2：死锁</h2><p><em>死锁是指两个线程执行过程中相关占用双方所需要的资源，导致两个线程都阻塞等待</em></p><h3 id="1-2-1-如何避免死锁"><a href="#1-2-1-如何避免死锁" class="headerlink" title="1.2.1:如何避免死锁"></a>1.2.1:如何避免死锁</h3><ul><li><p><input disabled type="checkbox"> <em>避免一个线程同时获多个锁</em></p></li><li><p><input disabled type="checkbox"> <em>避免一个线程在锁内占用多个资源，尽量保证每个锁只占用一个资源</em></p></li><li><p><input disabled type="checkbox"> <em>尝试使用定时锁，使用lock tryLock(timeout)来代替内部锁机制</em></p></li><li><p><input disabled type="checkbox"> <em>对于数据库锁，加锁与解锁必须在一个数据库连接里，否则会出现解锁失败的情况</em></p></li></ul><h2 id="1-3-volatile"><a href="#1-3-volatile" class="headerlink" title="1.3 volatile"></a>1.3 volatile</h2><h3 id="1-3-1轻量级的同步锁"><a href="#1-3-1轻量级的同步锁" class="headerlink" title="1.3.1轻量级的同步锁"></a>1.3.1轻量级的同步锁</h3><ul><li><p><input disabled type="checkbox"> 防止制定重排</p><blockquote><p>jvm在多线程环境下会对编译后的class文件进行优化选择执行，导致代码没有按照顺序执行</p></blockquote></li><li><p><input disabled type="checkbox"> 不能保证原子性</p><blockquote><p>不能像CAS机制一样，保证资源的被多个线程访问时的数据安全</p></blockquote></li><li><p><input disabled type="checkbox"> 对多个线程间保持透明</p><blockquote><p>多个线程访问一个资源时，一个线程改变资源后，其他线程可以获取修改后的值</p></blockquote></li></ul>]]></content>
    
    
    <categories>
      
      <category>多线程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多线程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>深入了解一下JVM</title>
    <link href="/2022/10/26/202210/java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2022/10/26/202210/java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<blockquote><h1 id="深入了解一下JVM"><a href="#深入了解一下JVM" class="headerlink" title="深入了解一下JVM"></a>深入了解一下JVM</h1></blockquote><h2 id="1-什么是JVM"><a href="#1-什么是JVM" class="headerlink" title="1:什么是JVM"></a>1:什么是JVM</h2><h3 id="1-1一次编译，到处执行"><a href="#1-1一次编译，到处执行" class="headerlink" title="1.1一次编译，到处执行"></a>1.1一次编译，到处执行</h3><p><em>jvm又称java 虚拟机。用来将java语言与操作系统交互的桥梁，jvm将java文件编译成class文件，class文件是二进制语言，可以被机器执行。不同的操作系统有不同的jvm , 在任何平台上执行的java代码会被解释成一致的class文件，实现了一次编译，到处执行。</em></p><h2 id="2-什么是JMM"><a href="#2-什么是JMM" class="headerlink" title="2:什么是JMM"></a>2:什么是JMM</h2><h3 id="2-1java内存模型"><a href="#2-1java内存模型" class="headerlink" title="2.1java内存模型"></a>2.1java内存模型</h3><p>jmm又叫java内存模型。如图所示</p><p><img src="https://pic1.imgdb.cn/item/6359356c16f2c2beb1a7961a.png"></p>]]></content>
    
    
    <categories>
      
      <category>java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基本配置</title>
    <link href="/2022/10/25/%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/10/25/%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>图床</td><td><a href="https://www.superbed.cn/timeline">https://www.superbed.cn/timeline</a></td></tr><tr><td>github账号</td><td><a href="mailto:&#50;&#x34;&#56;&#x36;&#x31;&#49;&#56;&#54;&#50;&#x37;&#x40;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#109;">&#50;&#x34;&#56;&#x36;&#x31;&#49;&#56;&#54;&#50;&#x37;&#x40;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#109;</a></td></tr><tr><td>github密码</td><td>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</td></tr><tr><td>github密码</td><td>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</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>博客基本配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客基本配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
